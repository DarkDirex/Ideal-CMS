<!DOCTYPE html>
<html lang="ru" xmlns="http://www.w3.org/1999/html">
<head>
    <meta name="robots" content="noindex,nofollow" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>{{ title }}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <base href="{{ cmsFolder }}/">

    <link href="Ideal/Library/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="Ideal/style.css" rel="stylesheet">

    <script type="text/javascript" src="Ideal/Library/jquery/jquery-1.8.3.min.js"></script>
    <script type="text/javascript" src="Ideal/Library/bootstrap/js/bootstrap.min.js"></script>

    <script src="Ideal/Library/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="Ideal/Library/ckfinder/ckfinder.js"></script>

    <!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    {% block jsAdmin %}
    {% endblock %}
</head>

<body>

<div class="container">

    <div class="navbar">
        <div class="navbar-inner">
            <a class="brand" href="{{ cmsFolder }}/index.php">{{ domain }}</a>
            {% if user.ID %}
                <ul class="nav">
                    {% for item in structures if item.isShow %}
                        <li {% if activeStructureId == item.ID %} class="active" {% endif %}>
                            <a href="index.php?par={{ item.ID }}">{{ item.name }}</a>
                        </li>
                    {% endfor %}
                </ul>

                <ul class="nav pull-right">
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-user"></i> <strong>{{ user.email }}</strong><b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li><a onClick="showModal('{{ user.structure_path }}', {{ user.ID }}, 'showEdit'); return false;" href="#">Профиль</a></li>
                            <li><a href="index.php?action=logout">Выход</a></li>
                        </ul>
                    </li>
                </ul>
            {% endif %}
        </div>
    </div>

    {% if breadCrumbs != '' %}
    <ul class="breadcrumb">
        {% for item in breadCrumbs %}
        <li>
            {% if loop.last %}
                {{ item.name }}
            {% else %}
                <a href="index.php?par={{ item.link }}">{{ item.name }}</a> <span class="divider">→</span>
            {% endif %}
        </li>
        {% endfor %}
    </ul>
    {% endif %}

    {% if toolbar != '' %}
        <a href="" class="pull-right" style="margin: -53px 28px 0 0; padding: 5px;" onClick="$('#toolbar-form').toggle(); return false;">
            <i class="icon-cog"></i>
        </a>
        <form class="form-inline well {% if hideToolbarForm %}hide{% endif %}" action="" method="get" id="toolbar-form">
            <input type="hidden" name="par" value="{{ par }}">
            {{ toolbar|raw }}
            <button type="submit" class="btn">Фильтр</button>
        </form>
    {% endif %}

    <h1>{{ header }}</h1>

{% block content %}

    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th width="27">
                <input type="checkbox" name="toggleAll" title="Выделить все" onclick="$('input.chk:checkbox').each(function(){this.checked = !this.checked;});">
            </th>
            {% for header in headers %}
                <th>{{ header }}</th>
            {% endfor %}
            <td style="width: 73px; text-align: right;">
                <a onClick="showModal('{{ par }}', 0, 'showCreate'); return false;s" href="#myModal" class="btn btn-mini button-edit">
                    <i class="icon-plus"></i> Создать
                </a>
            </td>
        </tr>
        </thead>

        <tbody>
        {% for item in rows %}
            <tr class="element {% if item.is_active == 0 %}inactive{% endif %} {% if item.is_not_menu == 1 %}not-menu{% endif %}" id="row{{ item.ID }}">
                <td>
                    <input type="checkbox" name="chk{{ item.ID }}" class="chk">
                    <input type="hidden" name="list_del[]" value="{{ item.ID }}">
                </td>
                {{ item.row | raw }}
                <td style="vertical-align: middle;">
                <div class="button-edit" style="position: absolute; margin-top: -11px;">
                    <span class="input-prepend">
                    <button class="btn btn-info btn-mini" title="Изменить" onClick="showModal('{{ par }}', {{ item.ID }}, 'showEdit');" style="width: 47px;">
                        <i class="icon-pencil icon-white"></i>
                    </button>
                    </span>
                    <span class="input-append">
                    <button class="btn btn-danger btn-mini" title="Удалить" onclick="showDeleteConfirm('{{ par }}', {{ item.ID }});">
                        <i class="icon-remove icon-white"></i>
                    </button>
                    </span>
                </div>
                </td>
            </tr>
        {% endfor %}
        </tbody>

    </table>

    <div id="myModal" class="modal hide fade" style="width: 773px; top: 5%;">
        <div class="modal-header">
            <a class="close" data-dismiss="modal">×</a>
            <h3 id="modal-header">Редактирование</h3>
        </div>
        <div class="modal-body">
            <form class="form-horizontal" id="editForm">
                <div id="modalContent"></div>
            </form>
        </div>
        <div class="modal-footer" style="height: 30px;">
            <span class="hide alert" style="margin-right: 10px; padding-top: 4px; padding-bottom: 4px;" id="message"></span>

            <div id="sendButtons" style="float: right">
                <a href="" onclick="onSubmit(true); return false;" class="btn btn-primary">Сохранить</a>
                <a href="" onclick="onSubmit(false); return false;" class="btn btn-info">Применить</a>
                <a href="" class="btn" data-dismiss="modal">Отменить</a>
            </div>
        </div>
    </div>

    {%if pages|length > 0 %}
    <div class="pagination pagination-centered">
        <ul>
        {% if pagePrev != '' %}
            <li><a href="{{ pagePrev }}">← назад</a></li>
        {% endif %}

        {% for page in pages %}
            {% if page.current == 1 %}
                <li class="active"><a>{{ page.num }}</a></li>
            {% else %}
                <li><a href="{{ page.url }}">{{ page.num }}</a></li>
            {% endif %}
        {% endfor %}

        {% if pageNext != '' %}
            <li><a href="{{ pageNext }}">вперёд →</a></li>
        {% endif %}
        </ul>
    </div>
    {% endif %}

    <script>
        // Инициализируем глобальную переменную, где будут хранится параметры редактируемого объекта
        window.idObject = [];

        // Делает AJAX-запрос для получения html-данных модального окна
        function showModal(par, id, action)
        {
            // Скрываем статусное сообщение (может остаться от предыдущего окна)
            $('#message').addClass('hide');

            // Переданные параметры нужно записать в глобальную переменную idObject
            window.idObject['par'] = par;
            window.idObject['id'] = id;
            window.idObject['action'] = action;

            window.idObject['changeTemplate'] = 0;

            // В случае удачного получения данных от сервереа - отображаем окно редактирования
            $.get(
                    "index.php",
                    {
                        action: action,
                        par: par,
                        id: id
                    },
                    onShowModalSuccess
            );
        }

        // Отображает модальное окно редактирования для указанного объекта
        function onShowModalSuccess(data)
        {
            if (window.idObject['action'] == 'showCreate') {
                $('#modal-header').html('Создание');
            }
            $('#modalContent').html(data);
            $('#modalContent').trigger('windowOpen');
            $('#myModal').modal({
                backdrop: 'static'
            }).css({
                        'margin-left': function () {
                            return -($(this).width() / 2);
                        }
                    });
            $('#myModal').modal('show');
            // TODO разобраться почему не работают тут $('.modal-header').outerHeight() и $('.modal-footer').outerHeight()
            // Формула: Высота страницы - 10% отступы сверху-снизу, - 30px отступы modal-body, - 49px высота modal-header, -60px высота modal-footer
            mh = $(window).height() * 0.9 - 30 - 49 - 60;
            $('.modal-body').css('max-height', mh);
        }


        // Обрабатывает нажатие на кнопки Сохранить/Применить
        function onSubmit(closeWindow)
        {
            window.idObject['closeWindow'] = closeWindow;

            // Обновляем текст в textarea из редакторов
            for ( instance in CKEDITOR.instances )
                CKEDITOR.instances[instance].updateElement();

            // Получаем все данные из формы
            formValues = $('#editForm').serialize();

            // Убираем слово show из названия экшена
            switch (window.idObject['action']) {
                case 'showCreate':
                    action = 'create';
                    break;
                case 'showEdit':
                    action = 'edit';
                    break;
                default:
                    action = '';
            }


            // Делаем AJAX-запрос с этими данными
            $.ajax({
                url: 'index.php',
                type: 'POST',
                dataType: "json",
                data: {
                    par: window.idObject['par'],
                    id: window.idObject['id'],
                    action: action,
                    changeTemplate: window.idObject['changeTemplate'],
                    formValues: formValues
                },
                beforeSend: function(){
                    message = $('#message');
                    message.show();
                    message.addClass('alert-info');
                    message.html('В процессе...');
                    $("#sendButtons").hide();
                },
                success: function (data) {

                    if (!closeWindow) {
                        $("#sendButtons").show();
                    }
                    message.removeClass('alert-info');
                    // В случае, если запрос удалось выполнить
                    resetErrorFields();
                    message = $('#message');
                    if (data['isCorrect'] == '1') {
                        message.addClass('alert-success');
                        message.html('Элемент успешно сохранён.');
                        // Если нажата кнопка "Сохранить" - нужно перезагрузить окно
                        if (window.idObject['closeWindow']) {
                            // TODO сделать, чтобы окно всегда перегружалось при закрытии после создания элемента
                            document.location.reload(); // обновляем страницу
                            return true;
                        }

                        // Прописываем полученный ID для созданного элемента
                        $.each(data.items, function (i, item) {
                            if (item.fieldName.lastIndexOf('_ID') != -1
                                    || item.fieldName.lastIndexOf('_structure_path') != -1) {
                                fieldName = '#' + item.fieldName;
                                $(fieldName).val(item.value);
                            }
                        });

                        // Если всё прошло успешно переименовываем заголовок
                        if (window.idObject['action'] == 'showCreate') {
                            window.idObject['action'] = 'showEdit';
                            $('#modal-header').html('Редактирование');
                        }
                    } else if (data['isCorrect'] == '2') {
                        // Собираем сообщения со всех полей в одно
                        text = 'Вы действительно хотите изменить:';
                        $.each(data.items, function (i, item) {
                            if (item.confirm == '') return true;
                            text = text + "\n" + item.confirm;
                        });
                        text = text + "\n" + 'данные изменённых параметров будут удалены!!!';
                        // Если требуется подтверждение на смену шаблона
                        if (confirm(text)) {
                            window.idObject['changeTemplate'] = 1;
                            // Даём команду на стирание старых данных
                            onSubmit(window.idObject['closeWindow']);
                        } else {
                            // Ничего не делаем
                        }
                    } else {
                        message.addClass('alert-error');
                        message.html('Ошибка: элемент не сохранён.');
                        // Если не успешно - выводим сообщения об ошибках
                        showErrorFields(data);
                        $("#sendButtons").show();
                    }
                },
                error: function(XMLHttpRequest, textStatus, errorThrown) {
                    alert(errorThrown + "\n\nResponse:\n" + XMLHttpRequest.responseText);
                    $("#sendButtons").show();
                    message.removeClass('alert-info');
                    message.addClass('alert-error');
                    message.html('Ошибка: элемент не сохранён.');
                }
            });
        }

        // В случае ошибки в форме - выводит сообщения об ошибке для элементов
        function showErrorFields(data)
        {
            errorText = 'Внимание!\nПри сохранении произошла ошибка. Элемент не сохранён.\nИсправьте ошибку и повторите сохранение';

            if ((data['errorText'] != null) && (data['errorText'] != '')) {
                errorText = data['errorText'];
            }
            alert(errorText);
            // Подсвечиваем вкладки с ошибками
            $.each(data.errorTabs, function(i, item){
                $('a[href="#' + item + '"]').addClass('error');
            });
            // Добавляем к соотв. полям сообщения об ошибке
            /* TODO сделать переключение на таб с ошибками ввода */
            $.each(data.items, function(i, item){
                if (item.message == '') return true;
                errorMsg = '<p class="help-block">' + item.message + '</p>';
                helpIdName = '#' + item.fieldName + '-help';
                controlIdName = '#' + item.fieldName + '-control-group';
                $(helpIdName).html(errorMsg);
                $(controlIdName).toggleClass('error');
            });
        }

        // Удаление сообщений об ошибках со всех полей
        function resetErrorFields()
        {
            // Снимаем подсветку с полей ввода
            $('.error').attr('class', 'control-group');
            // Удаляем сообщения об ошибках
            $('.help-block').remove();
            // Скрываем статус сохранения данных из подвала формы
            $('#message').removeClass('hide alert-success alert-error')
            // Снимаем подсветку с вкладок
            $('.nav-tabs > li > a').removeClass('error');
            // Сбрасываем флаг разрешения на изменение шаблона
            window.idObject['changeTemplate'] = 0;
        }

        //
        function showFinder(fieldName)
        {
            window.idObject['fieldName'] = '#' + fieldName;
            var finder = new CKFinder();
            finder.basePath = '{{ cmsFolder }}/Ideal/Library/ckfinder/';
            finder.selectActionFunction = setFileField;
            finder.popup();
        }

        //
        function setFileField(fileUrl)
        {
            text = window.idObject['fieldName'];
            $(text).prop('value', fileUrl);
        }

        function showDeleteConfirm(par, id)
        {
            if (confirm('Удалить этот элемент?')) {
                // Если пользователь подтвердил удаление — отправляем ajax-запрос на удаление
                $.getJSON(
                    "index.php",
                    {
                        action: 'delete',
                        par: par,
                        id: id
                    },
                    onDeleteSuccess
                );

            }
        }

        function onDeleteSuccess(data)
        {
            switch (data['isCorrect']) {
                case 1:
                    $('#row' + data['ID']).remove();
                    alert('Элемент удалён');
                    break;
                case 2:
                    alert('Ошибка. Нельзя удалить раздел со вложенными элементами.');
                    break;
                case 3:
                    alert('Ошибка: ' + data);
                    break;
            }
        }

    </script>


{% endblock %}

</div>

</body>
</html>